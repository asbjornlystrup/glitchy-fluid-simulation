<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(ft_info);
draw_set_color(c_white);
application_surface_enable(false);
texture_set_repeat(true);
window_width = window_get_width();
window_height = window_get_height();

effect = 0; effects = 1;
sf_effect = -1;
sf_effect_width = 720;
sf_effect_height = 720;
sf_temporary = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_pressed(vk_escape)) game_end();

if (!surface_exists(sf_effect)) {
    sf_effect = surface_create(sf_effect_width, sf_effect_height);
    surface_set_target(sf_effect); draw_clear($008080); surface_reset_target();
}

if (!surface_exists(sf_temporary)) {
    sf_temporary = surface_create(sf_effect_width, sf_effect_height);
}

switch (effect) {
    
    case 0:
        draw_clear(c_black);
        
        var iterations;
        if (keyboard_check(vk_space)) {
            iterations = 20;
        } else {
            iterations = 1;
        }
        
        repeat (iterations) {
            surface_set_target(sf_temporary);
                texture_set_repeat(true);
                texture_set_repeat_ext(0, true);
                texture_set_repeat_ext(1, true);
                draw_enable_alphablend(false);
                if (mouse_check_button(mb_left)) {
                    shader_set(sh_cml_rgb_displacement_add);
                    shader_set_uniform_f(shader_get_uniform(sh_cml_rgb_displacement_add, "texel_size"), 1 / sf_effect_width, 1 / sf_effect_height);
                    shader_set_uniform_f(shader_get_uniform(sh_cml_rgb_displacement_add, "mouse"), mouse_x / window_width, mouse_y / window_height);
                    shader_set_uniform_f(shader_get_uniform(sh_cml_rgb_displacement_add, "push"), (mouse_x - mouse_x_previous) / window_width * 0.2, (mouse_y - mouse_y_previous) / window_height * 0.2);
                    draw_surface(sf_effect, 0, 0);
                    shader_reset();
                } else {
                    shader_set(sh_cml_rgb_displacement_update);
                    shader_set_uniform_f(shader_get_uniform(sh_cml_rgb_displacement_update, "texel_size"), 1 / sf_effect_width, 1 / sf_effect_height);
                    draw_surface(sf_effect, 0, 0);
                    shader_reset();
                }
                draw_enable_alphablend(true);
            surface_reset_target();
            var t = sf_effect;
            sf_effect = sf_temporary;
            sf_temporary = t;
        }
        shader_set(sh_cml_rgb_displacement_visualize); draw_surface_stretched(sf_effect, 0, 0, window_width, window_height); shader_reset();
        break;

}

draw_text(10, 10, "Click to add fluid#Hold &lt;Space&gt; for 20x speed#fps: " + string(fps));

mouse_x_previous = mouse_x; mouse_y_previous = mouse_y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
